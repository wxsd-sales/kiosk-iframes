import{O as a}from"./singletons-2b16acfd.js";class d{constructor(n,l,r){console.log("Openweather contructor called");const o="https://api.openweathermap.org/data/2.5/weather",c={id:`${n}`,appid:`${l}`,units:`${r}`},e=new URLSearchParams(c).toString();this.request=new Request(o+"?"+e,{method:"GET",redirect:"follow"})}getWeather(){return fetch(this.request).then(n=>n.text()).then(n=>JSON.parse(n)).catch(n=>console.log("error",n))}}const b=a({}),f=a({}),u=a("Sunny"),g=a("75"),w=a("New York"),m=a(""),h=a("");function v(i){const n=["heartbeat","location","analytics","floorAvailability","deskAvailability"];console.log("Setting up connection");let l,r="";const o=new WebSocket("wss://webex-api-server.dnaspaces.io/webexClient?token="+i);o.binaryType="blob",o.onopen=e=>{console.log("Sending Websocket setup")},o.onmessage=e=>{if(!e.data instanceof Blob)return;const t=new FileReader;t.onload=s=>{const p=JSON.parse(s.target.result);c(p.event,p.data)},t.readAsText(e.data)},o.onclose=function(e){console.log("Socket is closed. Reconnect will be attempted in 1 second.",e.reason),clearTimeout(l),setTimeout(function(){v()},1e3)},o.onerror=function(e){console.error("Socket encountered error: ",e.message,"Closing socket"),o.close()};function c(e,t){switch(e){case"analytics":if(t.level!="FLOOR")return;console.log("Floor Analytics Data Received"),b.set(t);break;case"floorAvailability":console.log("Floor Availablity Data Received"),f.set(t);break;case"contextInfo":console.log("Context Information Received"),m.set(t.building),t.floor==null?(console.log("Floor null, setting to blank"),h.set("")):(console.log("Floor is not null"),h.set(t.floor)),r=t.devicePath.pop(),console.log("Location Id set to :"+r),console.log("Sending Websocket setup");for(let s=0;s<n.length;s++)o.send(JSON.stringify({event:n[s],location:r}));l=setInterval(()=>{o.send(JSON.stringify({event:"heartbeat",location:r}))},30*1e3);break}}}function k(i,n,l,r){console.log(`Monitoring Weather for CityId: ${i}`);const o=new d(i,n,l);o.getWeather().then(e=>{u.set(c(e.weather[0].description)),g.set(Math.round(e.main.temp)),w.set(e.name)}),setInterval(()=>{o.getWeather().then(e=>{u.set(c(e.weather[0].description)),g.set(Math.round(e.main.temp))})},r*60*1e3);function c(e){const t=e.split(" ");for(let s=0;s<t.length;s++)t[s]=t[s][0].toUpperCase()+t[s].substr(1);return t.join(" ")}}export{b as a,f as b,w as c,m as d,v as e,h as f,k as m,g as t,u as w};
